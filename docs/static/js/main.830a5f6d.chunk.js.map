{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","list","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","map","element","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GiftExpertApp","categories","categorie","ReactDOM","render","document","getElementById"],"mappings":"6MAkCeA,EA/BG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,cAAiB,EAECC,mBAAS,IAFV,mBAE1BC,EAF0B,KAEdC,EAFc,KAgBjC,OACI,0BAAMC,SATS,SAACC,GAChBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAjBY,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,YCIhBG,EAVK,SAAC,GAAmB,EAAlBC,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAE3B,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCPHK,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACbN,EADa,iDACmCO,UAAUF,GAD7C,+DAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAHY,kBAKZA,EAAKC,KAAI,SAAAC,GAAY,IAAD,EACvB,MAAO,CACHf,GAAIe,EAAQf,GACZC,MAAOc,EAAQd,MACfC,IAAG,UAAEa,EAAQC,cAAV,aAAE,EAAgBC,iBAAiBf,SAT3B,2CAAH,sDCwBLgB,EApBC,SAAC,GAAgB,IAAfX,EAAc,EAAdA,SAAc,ECDJ,SAACA,GAAc,IAAD,EACZrB,mBAAS,CAC/B2B,KAAM,GACNM,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAXAC,qBAAU,WACNhB,EAAQC,GACHgB,MAAK,SAAAC,GACFH,EACI,CACIR,KAAMW,EACNL,SAAS,UAKtBC,EDbqBK,CAAalB,GAAlCY,EAFqB,EAErBA,QAAaH,EAFQ,EAEbH,KACf,OACI,oCACI,wBAAIV,UAAU,sCAAsCI,GACnDY,GAAS,uBAAGhB,UAAU,qCAAb,YACV,yBAAKA,UAAU,aAGPa,EAAOF,KAAI,SAAAC,GAAO,OACd,kBAAC,EAAD,eACIW,IAAKX,EAAQf,IACTe,UESjBY,EAtBO,WAAO,IAAD,EAElBzC,mBAAS,CAAC,cAFQ,mBACjB0C,EADiB,KACL3C,EADK,KAIxB,OACI,oCACI,4CACA,6BACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,4BAEQ2C,EAAWd,KAAI,SAAAe,GAAS,OACpB,kBAAC,EAAD,CACIH,IAAKG,EACLtB,SAAUsB,UCZtCC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.830a5f6d.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory=({setCategories})=>{\r\n\r\n    const [inputValue, setInputValue]=useState(\"\");\r\n\r\n    const handleInputChange=(e)=>{\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n            setCategories(list=>[inputValue,...list]);\r\n            setInputValue(\"\");\r\n        }\r\n    };\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    );\r\n}\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default AddCategory;","import React from 'react';\r\n\r\nconst GifGridItem = ({id,title,url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GifGridItem;\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=l71lGz2yNHQxgj6Mkbg8VAyxGHYSjw5M`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    return data.map(element => {\r\n        return {\r\n            id: element.id,\r\n            title: element.title,\r\n            url: element.images?.downsized_medium.url\r\n        };\r\n    });\r\n};","import React from 'react';\r\nimport GifGridItem from \"./GifGridItem\";\r\nimport {useFetchGifs} from \"../hooks/useFetchGifs\";\r\n\r\nconst GifGrid = ({category}) => {\r\n    //data tiene el arreglo de imgs al poner : le das el nombre que ocupara en el componente\r\n    const {loading,data:images}=useFetchGifs(category);\r\n    return (\r\n        <>\r\n            <h3 className=\" animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading&&<p className=\" animate__animated animate__flash\">Cargando</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    //data ahora llamado images\r\n                    images.map(element =>\r\n                        <GifGridItem\r\n                            key={element.id}\r\n                            {...element}\r\n                        />)\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nexport default GifGrid;\r\n","import {useEffect, useState} from \"react\";\r\nimport {getGifs} from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState(\r\n                    {\r\n                        data: imgs,\r\n                        loading: false\r\n                    }\r\n                );\r\n            });\r\n    });\r\n    return state;\r\n};\r\n\r\n\r\n/*const [images, setImages] = useState([]);*/\r\n/*\r\nuna manera\r\n    useEffect(() => {\r\n        getGifs(category).then(imgs => setImages(imgs));\r\n    }, []);*/\r\n//otra manera\r\n/*    useEffect(() => {\r\n        getGifs(category).then(setImages);\r\n    }, [category]);*/","import React, {useState} from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nconst GiftExpertApp = () => {\r\n    const [categories, setCategories]\r\n        = useState([\"One Punch\"]);\r\n\r\n    return (\r\n        <>\r\n            <h2>GiftExpertAp</h2>\r\n            <hr/>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <ol>\r\n                {\r\n                    categories.map(categorie =>\r\n                        <GifGrid\r\n                            key={categorie}\r\n                            category={categorie}\r\n                        />)\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GiftExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GiftExpertApp from \"./GiftExpertApp\";\n\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}